{
  "mainIndex": "\n\timport { configServer } from \"@mayajs/core\";\n\timport { AppModule } from \"./app.module\";\n\timport cors from \"cors\";\n\timport bodyParser from \"body-parser\";\n\n\tconfigServer(3333)\n\t.usePlugins([\n\t\tbodyParser,\n\t\tcors\n\t\t// Add plugins or middlewares here\n\t\t// i.e. CORS, body-parser, multer and etc...\n\t])\n\t.bootstrapModule(AppModule);",
  "gameModel": "\n\timport { Schema } from \"mongoose\";\n\n\texport default {\n\t\tname: \"Game\",\n\t\tschema: new Schema({\n\t\t\tname: {\n\t\t\t\ttype: String,\n\t\t\t\trequired: [true, \"Game Name cannot be empty\"]\n\t\t\t},\n\t\t\tconsole: [\n\t\t\t\t{\n\t\t\t\t\tname: String,\n\t\t\t\t\trequired: [true, \"Console name cannot be empty\"]\n\t\t\t\t}\n\t\t\t],\n\t\t\tdeveloper: {\n\t\t\t\tname: String\n\t\t\t},\n\t\t\tgenre: {\n\t\t\t\tname: String,\n\t\t\t}\n\t\t}),\n\t};\n",
  "sampleService": "\n\timport { Service } from \"@mayajs/core\";\n\timport { MongoDbServices } from \"@mayajs/mongo\";\n\n\t@Service()\n\texport class SampleServices {\n\t\tget model() {\n\t\t\tconst db = this.mongo.database(\"main\");\n\t\t\treturn db.instance.model(\"Sample\");\n\t\t}\n\n\t\tconstructor(private mongo: MongoDbServices) {}\n\t}",
  "sampleController": "\n\timport { Get, Patch, Post, Delete, Put } from \"@mayajs/common\";\n\timport { MayaJsContext } from \"@mayajs/router\";\n\timport { Controller } from \"@mayajs/core\";\n\timport { SampleServices } from \"./sample.service\";\n\n\t@Controller()\n\texport class SampleController {\n\t\tconstructor(private services: SampleServices) {}\n\n\t\t@Post()\n\t\tasync createSample({ body }: MayaJsContext): Promise<any> {\n\t\t\t// Create a Sample\n\t\t\treturn { message: \"From SampleController POST route\", body };\n\t\t}\n\n\t\t@Get()\n\t\tasync readSample(): Promise<any> {\n\t\t\t// Read all Sample list\n\t\t\treturn { message: \"From SampleController GET route\" };\n\t\t}\n\n\t\t@Get(\"/:id\")\n\t\tasync readSampleByID({ params }: MayaJsContext): Promise<any> {\n\t\t\t// Read Sample by ID from list\n\t\t\treturn { message: \"From SampleController GET route with params ID\", params };\n\t\t}\n\n\t\t@Put(\"/:id\")\n\t\tasync replaceSample({ body, params }: MayaJsContext): Promise<any> {\n\t\t\t// Replace Sample from list\n\t\t\treturn { message: \"From SampleController PUT route\", body, params };\n\t\t}\n\n\t\t@Patch(\"/:id\")\n\t\tasync updateSample({ body, params }: MayaJsContext): Promise<any> {\n\t\t\t// Update Sample from list\n\t\t\treturn { message: \"From SampleController PATCH route\", body, params };\n\t\t}\n\n\t\t@Delete(\"/:id\")\n\t\tasync deleteSample({ params }: MayaJsContext): Promise<any> {\n\t\t\t// Delete Sample from list\n\t\t\treturn { message: \"From SampleController DELETE route\", params };\n\t\t}\n\t}\n",
  "mongo": "\n\timport env from \"../environments\";\n\timport Game from '../models/game.model';\n\texport const mongoOptions = {\n\t\tconnectionString: env.mongo_conn,\n\t\tname: \"games\",\n\t\toptions: {\n\t\t\tuseNewUrlParser: true,\n\t\t\tuseCreateIndex: true,\n\t\t\tuseUnifiedTopology: true,\n\t\t\tuseFindAndModify: true,\n\t\t},\n\t\tschemas: [Game],\n\t};\n"
}
